<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblTextHeightTips.Text" xml:space="preserve">
    <value>Set it to zero if you don't want to show image title</value>
  </data>
  <data name="plFlashWidth.Text" xml:space="preserve">
    <value>Flash Width</value>
  </data>
  <data name="plFlashWidth.Help" xml:space="preserve">
    <value>set flash width, the value must be integer. Recommend set it as even.</value>
  </data>
  <data name="plFlashHeight.Text" xml:space="preserve">
    <value>Flash Height</value>
  </data>
  <data name="plFlashHeight.Help" xml:space="preserve">
    <value>set flash height, the value must be integer. Recommend set it as even.</value>
  </data>
  <data name="plTextHeight.Text" xml:space="preserve">
    <value>Image Title Height</value>
  </data>
  <data name="plTextHeight.Help" xml:space="preserve">
    <value>Image title height, set it to zero if you don't want to show image title. Recommend set it as even.</value>
  </data>
  <data name="li_SortField_Views.Text" xml:space="preserve">
    <value>Views</value>
  </data>
  <data name="plSortField.Text" xml:space="preserve">
    <value>Sort By</value>
  </data>
  <data name="li_SortField_LastModifiedDate.Text" xml:space="preserve">
    <value>Last modified date</value>
  </data>
  <data name="ControlTitle_edit.Text" xml:space="preserve">
    <value>Article list dashboard settings sizard</value>
  </data>
  <data name="StepNextButton.Text" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="StepPreviousButton.Text" xml:space="preserve">
    <value>Previous</value>
  </data>
  <data name="lblGeneral.Text" xml:space="preserve">
    <value>General Settings</value>
  </data>
  <data name="wsGeneral.Text" xml:space="preserve">
    <value>General Settings</value>
  </data>
  <data name="plDetailTab.Text" xml:space="preserve">
    <value>CrossArticle_Detail Sub Module Page</value>
  </data>
  <data name="wsFinish.Text" xml:space="preserve">
    <value>Finish</value>
  </data>
  <data name="lblFinish.Text" xml:space="preserve">
    <value>Click "Finish" button to save data</value>
  </data>
  <data name="lblFlashSettings.Text" xml:space="preserve">
    <value>Flash Settings</value>
  </data>
  <data name="Required.Text" xml:space="preserve">
    <value>Required</value>
  </data>
  <data name="plFeatured.Help" xml:space="preserve">
    <value>Check to display only featured articles</value>
  </data>
  <data name="plSortField.Help" xml:space="preserve">
    <value>Sort Fields</value>
  </data>
  <data name="li_SortField_CreationDate.Text" xml:space="preserve">
    <value>Creation Date</value>
  </data>
  <data name="li_SortField_PublishDate.Text" xml:space="preserve">
    <value>Publish Date</value>
  </data>
  <data name="plDetailTab.Help" xml:space="preserve">
    <value>Select which page to display article detail, that page should have a CrossArticle_Detail sub module instance on it. If you don't specify it ,module will use the default detail tab to display.</value>
  </data>
  <data name="plRows.Help" xml:space="preserve">
    <value>Enter article rows that will displayed in flash. Note, the "Numeric navigate (classical)" can only display up to 9 images. </value>
  </data>
  <data name="liFlashAlign_center.Text" xml:space="preserve">
    <value>Center</value>
  </data>
  <data name="liFlashAlign_left.Text" xml:space="preserve">
    <value>Left</value>
  </data>
  <data name="liFlashAlign_right.Text" xml:space="preserve">
    <value>Right</value>
  </data>
  <data name="plFlashAlign.Help" xml:space="preserve">
    <value>Choose flash align</value>
  </data>
  <data name="plFlashAlign.Text" xml:space="preserve">
    <value>Flash Align</value>
  </data>
  <data name="liTextAlign_center.Text" xml:space="preserve">
    <value>Center</value>
  </data>
  <data name="liTextAlign_left.Text" xml:space="preserve">
    <value>Left</value>
  </data>
  <data name="liTextAlign_right.Text" xml:space="preserve">
    <value>Right</value>
  </data>
  <data name="plIntervalTime.Help" xml:space="preserve">
    <value>Image rotator time, default value is 5, set it to zero to stop rotator</value>
  </data>
  <data name="plIntervalTime.Text" xml:space="preserve">
    <value>Rotator Interval (sec)</value>
  </data>
  <data name="plTextAlign.Help" xml:space="preserve">
    <value>Choose image text alignment</value>
  </data>
  <data name="plTextAlign.Text" xml:space="preserve">
    <value>Text Align</value>
  </data>
  <data name="plRows.Text" xml:space="preserve">
    <value>Article Rows</value>
  </data>
  <data name="InvalidHex.Text" xml:space="preserve">
    <value>Invalid Hex Value</value>
  </data>
  <data name="plFlashBgColor.Help" xml:space="preserve">
    <value>Pick flash background color, default value is 0xFFFFFF</value>
  </data>
  <data name="plFlashBgColor.Text" xml:space="preserve">
    <value>Flash Background Color</value>
  </data>
  <data name="liFlashWmode_opaque.Text" xml:space="preserve">
    <value>Opaque</value>
  </data>
  <data name="liFlashWmode_transparent.Text" xml:space="preserve">
    <value>Transparent</value>
  </data>
  <data name="liFlashWmode_window.Text" xml:space="preserve">
    <value>Window</value>
  </data>
  <data name="liPlayModeList_ImageNavigate.Text" xml:space="preserve">
    <value>Numeric navigate (classical)</value>
  </data>
  <data name="plFlashWmode.Help" xml:space="preserve">
    <value>Choose flash wmode option, default value is transparent</value>
  </data>
  <data name="plFlashWmode.Text" xml:space="preserve">
    <value>Flash Wmode Option</value>
  </data>
  <data name="plPlayMode.Help" xml:space="preserve">
    <value> &amp;nbsp;&amp;nbsp;"Numeric navigate (classical)" supports up to 9 image items. The other two has no image item limitation. </value>
  </data>
  <data name="plPlayMode.Text" xml:space="preserve">
    <value>Slideshow mode</value>
  </data>
  <data name="wsFlashSettings.Text" xml:space="preserve">
    <value>Flash Settings</value>
  </data>
  <data name="plFeatured.Text" xml:space="preserve">
    <value>Featured Articles Only</value>
  </data>
  <data name="secPlayModeTips.Text" xml:space="preserve">
    <value>Slideshow mode selection tips</value>
  </data>
  <data name="plTemplate.Help" xml:space="preserve">
    <value>Templates locate under desktopmodules/CrossArticle/Template/ListDashboard, you can customize your own display templates.</value>
  </data>
  <data name="plTemplate.Text" xml:space="preserve">
    <value>View Template</value>
  </data>
  <data name="liPlayModeList_ImageNavigateButtonFree.Text" xml:space="preserve">
    <value>Numeric navigate (button free)</value>
  </data>
  <data name="liPlayModeList_ImageNavigateIntegrative.Text" xml:space="preserve">
    <value>Numeric navigate (integrative)</value>
  </data>
  <data name="plNavigateIntegrative_BtnBg.Help" xml:space="preserve">
    <value>Select button focus color, default value is 0xD52100.</value>
  </data>
  <data name="plNavigateIntegrative_BtnBg.Text" xml:space="preserve">
    <value>Button focus color</value>
  </data>
  <data name="plNavigateIntegrative_BtnColor.Help" xml:space="preserve">
    <value>Select button color, default value is 0x958683.</value>
  </data>
  <data name="plNavigateIntegrative_BtnColor.Text" xml:space="preserve">
    <value>Button Color</value>
  </data>
  <data name="plNavigateIntegrative_Speed.Help" xml:space="preserve">
    <value>Enter image rotator speed (millisecond), default value is 4000.</value>
  </data>
  <data name="plNavigateIntegrative_Speed.Text" xml:space="preserve">
    <value>Rotator Speed</value>
  </data>
  <data name="plNavigateIntegrative_TextSize.Help" xml:space="preserve">
    <value>Text size, default value is 12.</value>
  </data>
  <data name="plNavigateIntegrative_TextSize.Text" xml:space="preserve">
    <value>Text Size</value>
  </data>
  <data name="plNavigateIntegrative_TxtColor.Help" xml:space="preserve">
    <value>Select text color,default value is 0xFFFFFF.</value>
  </data>
  <data name="plNavigateIntegrative_TxtColor.Text" xml:space="preserve">
    <value>Text Color</value>
  </data>
  <data name="secNavigateIntegrativeSettings.Text" xml:space="preserve">
    <value>Numeric navigate (integrative) settings</value>
  </data>
  <data name="secNavigateSettings.Text" xml:space="preserve">
    <value>Numeric navigate (classical) settings</value>
  </data>
  <data name="secFlashGeneral.Text" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="lblImageNavigate_ButtonFree.Text" xml:space="preserve">
    <value>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Screen shot of numeric navigate (button free), supports unlimited images. The navigate button can be put to bottom left/bottom right/top left/top right.</value>
  </data>
  <data name="lblImageNavigate_Classical.Text" xml:space="preserve">
    <value>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Screen shot of numeric navigate (classical), supports 9 image items.</value>
  </data>
  <data name="lblImageNavigate_Integrative.Text" xml:space="preserve">
    <value>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Screen shot of numeric navigate (integrative), supports unlimited image items.</value>
  </data>
  <data name="lblPlayModeTips.Text" xml:space="preserve">
    <value> &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"Numeric navigate (classical)" supports up to 9 article items. The others has no image item limitation.</value>
  </data>
  <data name="liLinkTarget_Blank.Text" xml:space="preserve">
    <value>New Window</value>
  </data>
  <data name="liLinkTarget_Self.Text" xml:space="preserve">
    <value>Self Window</value>
  </data>
  <data name="plLinkTarget.Help" xml:space="preserve">
    <value>Choose link target.</value>
  </data>
  <data name="plLinkTarget.Text" xml:space="preserve">
    <value>Link Target</value>
  </data>
  <data name="plNavigateButtonFree_BgColor.Help" xml:space="preserve">
    <value>Flash background color,default is 0xDDDDDD</value>
  </data>
  <data name="plNavigateButtonFree_BgColor.Text" xml:space="preserve">
    <value>Background Color</value>
  </data>
  <data name="plNavigateButtonFree_Button_Pos.Help" xml:space="preserve">
    <value>Navigate button can be put to top left/top right/bottom left/bottom right.</value>
  </data>
  <data name="plNavigateButtonFree_Button_Pos.Text" xml:space="preserve">
    <value>Navigate button position</value>
  </data>
  <data name="plNavigateButtonFree_Show_Text.Help" xml:space="preserve">
    <value>Show image text in flash.</value>
  </data>
  <data name="plNavigateButtonFree_Show_Text.Text" xml:space="preserve">
    <value>Show Text</value>
  </data>
  <data name="plNavigateButtonFree_Stop_Time.Help" xml:space="preserve">
    <value>Enter image rotator speed. 1000 = 1 second</value>
  </data>
  <data name="plNavigateButtonFree_Stop_Time.Text" xml:space="preserve">
    <value>Rotator Speed</value>
  </data>
  <data name="plNavigateButtonFree_TxtColor.Help" xml:space="preserve">
    <value>Text color, default is 0x424242</value>
  </data>
  <data name="plNavigateButtonFree_TxtColor.Text" xml:space="preserve">
    <value>Text Color</value>
  </data>
  <data name="secNavigateButtonFreeSettings.Text" xml:space="preserve">
    <value>Numeric navigate (button free) settings</value>
  </data>
  <data name="li_NavigateButtonFree_Button_Pos_Buttom.Text" xml:space="preserve">
    <value>Top Right</value>
  </data>
  <data name="li_NavigateButtonFree_Button_Pos_Left.Text" xml:space="preserve">
    <value>Bottom Left</value>
  </data>
  <data name="li_NavigateButtonFree_Button_Pos_Right.Text" xml:space="preserve">
    <value>Bottom Right</value>
  </data>
  <data name="li_NavigateButtonFree_Button_Pos_Top.Text" xml:space="preserve">
    <value>Top Left</value>
  </data>
  <data name="plCategory.Help" xml:space="preserve">
    <value>Specifies the categories from which articles are displayed. Uncheck all will  display articles from all categories.</value>
  </data>
  <data name="plCategory.Text" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="plType.Help" xml:space="preserve">
    <value>Choose department which article belongs</value>
  </data>
  <data name="plType.Text" xml:space="preserve">
    <value>Select Department</value>
  </data>
  <data name="wsCategory.Text" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="Tip_Category.Text" xml:space="preserve">
    <value>Specifies the categories from which articles are displayed. Uncheck all of them will display articles from all categories</value>
  </data>
  <data name="Tip_DetailTab.Text" xml:space="preserve">
    <value>Select which page to display article detail, that page should have a CrossArticle_Detail sub module instance on it. If you don't specify it, module will use the default detail tab for selected department (which is specified in "CrossArticle_Admin sub module - System Data - Departments") to display.</value>
  </data>
  <data name="plTitleLength.Help" xml:space="preserve">
    <value>Enter article title length while displaying, enter 0 to display full title.</value>
  </data>
  <data name="plTitleLength.Text" xml:space="preserve">
    <value>Max Title Length</value>
  </data>
  <data name="lblCategory.Text" xml:space="preserve">
    <value>Categories</value>
  </data>
</root>