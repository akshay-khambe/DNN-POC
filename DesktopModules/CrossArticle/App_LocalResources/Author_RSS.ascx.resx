<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Category.ErrorMessage" xml:space="preserve">
    <value>You must select at least 1 category (up to {0}) for current RSS feed.</value>
  </data>
  <data name="plPinOrder.Text" xml:space="preserve">
    <value>Article Sort Index</value>
  </data>
  <data name="plPinOrder.Help" xml:space="preserve">
    <value>Set article display order.</value>
  </data>
  <data name="plAuthor.Text" xml:space="preserve">
    <value>Article Author</value>
  </data>
  <data name="plAuthor.Help" xml:space="preserve">
    <value>Article default author</value>
  </data>
  <data name="li_FeedType_TwitterSearch.Text" xml:space="preserve">
    <value>Twitter Search</value>
  </data>
  <data name="plAuthed.Text" xml:space="preserve">
    <value>Authorized</value>
  </data>
  <data name="plAuthed.Help" xml:space="preserve">
    <value>Mark this feed as authorized. Unauthorized RSS feeds will not be used to import articles.</value>
  </data>
  <data name="plAllowRating.Text" xml:space="preserve">
    <value>Allow Rating</value>
  </data>
  <data name="plAllowRating.Help" xml:space="preserve">
    <value>Choose whether allow rating</value>
  </data>
  <data name="plRatingRoles.Text" xml:space="preserve">
    <value>Rating Roles</value>
  </data>
  <data name="plRatingRoles.Help" xml:space="preserve">
    <value>Choose rating roles</value>
  </data>
  <data name="plAllowComment.Text" xml:space="preserve">
    <value>Allow Comment</value>
  </data>
  <data name="plAllowComment.Help" xml:space="preserve">
    <value>Allow comment online</value>
  </data>
  <data name="plCommentRoles.Text" xml:space="preserve">
    <value>Comment Roles</value>
  </data>
  <data name="plCommentRoles.Help" xml:space="preserve">
    <value>Choose comment roles</value>
  </data>
  <data name="plAutoAuthComment.Text" xml:space="preserve">
    <value>Auto authorize comment</value>
  </data>
  <data name="plAutoAuthComment.Help" xml:space="preserve">
    <value>Auto authorize comment information</value>
  </data>
  <data name="li_FeedType_RSS.Text" xml:space="preserve">
    <value>RSS / Atom Feed</value>
  </data>
  <data name="plRetrieveInterval.Help" xml:space="preserve">
    <value>Select the Interval you wish to collect information from the feed (in minutes). Zero collects feed on every hit</value>
  </data>
  <data name="valBetween0to1440.Text" xml:space="preserve">
    <value>Value must between 0 - 1440 (24 hours)</value>
  </data>
  <data name="lblAuthed.Text" xml:space="preserve">
    <value>Authorized</value>
  </data>
  <data name="lblCreatedDate.Text" xml:space="preserve">
    <value>Created</value>
  </data>
  <data name="plQuote.Help" xml:space="preserve">
    <value>Choose this option if article is quoted from somewhere else, not create by yourself.</value>
  </data>
  <data name="plQuote.Text" xml:space="preserve">
    <value>Article Is Quoted</value>
  </data>
  <data name="plSource.Help" xml:space="preserve">
    <value>If article is quoted, input its original source.</value>
  </data>
  <data name="plSource.Text" xml:space="preserve">
    <value>Article Source</value>
  </data>
  <data name="plDraft.Help" xml:space="preserve">
    <value>Mark article as draft so it will not display to public.</value>
  </data>
  <data name="plDraft.Text" xml:space="preserve">
    <value>Article Is Draft</value>
  </data>
  <data name="plActive.Help" xml:space="preserve">
    <value>Set feed as active. If a RSS feed is marked as inactive, module will not import articles from it.</value>
  </data>
  <data name="plActive.Text" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="ControlTitle_author_rss.Text" xml:space="preserve">
    <value>My RSS Feeds</value>
  </data>
  <data name="Tip_FeedType.Text" xml:space="preserve">
    <value>Enter a RSS feed url (e.g. &lt;a href="http://dnnmodule.com/DesktopModules/CrossArticle/ArticleRss.aspx?ArticleTypeId=1&amp;ArticleModuleId=559&amp;TabId=109" target="_blank"&gt;http://dnnmodule.com/DesktopModules/CrossArticle/ArticleRss.aspx?ArticleTypeId=1&amp;ArticleModuleId=559&amp;TabId=109&lt;/a&gt;) to retrieve articles. Note, to retrieve articles from Twitter search (or Twitter User Timeline), site administrator needs to provide Twitter app credentials at "CrossArticle_Admin sub module - Admin control panel - Configurations - Global Settings - Twitter Credentials" first. </value>
  </data>
  <data name="plFeedUrl1.Text" xml:space="preserve">
    <value>Feed Url</value>
  </data>
  <data name="imgToggleActive.Text" xml:space="preserve">
    <value>Toggle Active</value>
  </data>
  <data name="imgToggleAuthed.Text" xml:space="preserve">
    <value>Toggle Authed</value>
  </data>
  <data name="lblFeedName.Text" xml:space="preserve">
    <value>Feed Name</value>
  </data>
  <data name="plFeedType.Help" xml:space="preserve">
    <value>Please select the type of your feed. If you want to collect news from an RSS / Atom feed or from twitter, select the corresponding entrys.</value>
  </data>
  <data name="NoRecords.Text" xml:space="preserve">
    <value>No record.</value>
  </data>
  <data name="plAllowRecommend.Help" xml:space="preserve">
    <value>Allow people to recommend this article.</value>
  </data>
  <data name="plAllowRecommend.Text" xml:space="preserve">
    <value>Allow Recommend</value>
  </data>
  <data name="plDownloadRoles.Help" xml:space="preserve">
    <value>Select roles which can download attachment of this article.</value>
  </data>
  <data name="plPopularTag.Help" xml:space="preserve">
    <value>Choose popular tags from drop down list box, click "Add Tag" button to add it to article tag list.</value>
  </data>
  <data name="plPopularTag.Text" xml:space="preserve">
    <value>Popular Tags</value>
  </data>
  <data name="plRecommendRoles.Text" xml:space="preserve">
    <value>Recommend Roles</value>
  </data>
  <data name="lblPortalDisableComment.Text" xml:space="preserve">
    <value>Comment is disabled by site administrator.</value>
  </data>
  <data name="lblPortalDisableRating.Text" xml:space="preserve">
    <value>Rating is disabled by site administrator.</value>
  </data>
  <data name="lblPortalDisableRecommend.Text" xml:space="preserve">
    <value>Recommend is disabled by site administrator.</value>
  </data>
  <data name="plDownloadRoles.Text" xml:space="preserve">
    <value>Attachment download roles</value>
  </data>
  <data name="plRecommendRoles.Help" xml:space="preserve">
    <value>Select roles which can recommend this article.</value>
  </data>
  <data name="lblFeedType.Text" xml:space="preserve">
    <value>Feed Type</value>
  </data>
  <data name="lblLastRetrieve.Text" xml:space="preserve">
    <value>Last Retrieve</value>
  </data>
  <data name="plFeedName.Text" xml:space="preserve">
    <value>Feed Name</value>
  </data>
  <data name="plFeedName.Help" xml:space="preserve">
    <value>Enter feed name, can't be null</value>
  </data>
  <data name="divBasic.Text" xml:space="preserve">
    <value>Basic Information</value>
  </data>
  <data name="divCategory.Text" xml:space="preserve">
    <value>Default Categories</value>
  </data>
  <data name="divTag.Text" xml:space="preserve">
    <value>Default Tags</value>
  </data>
  <data name="li_FeedType_TwitterTimeline.Text" xml:space="preserve">
    <value>Twitter User Timeline</value>
  </data>
  <data name="plFeedType.Text" xml:space="preserve">
    <value>Feed Type</value>
  </data>
  <data name="lblFeedUrl.Help" xml:space="preserve">
    <value>Please enter the feed Url (RSS/Atom-Feed) or the search term (twitter search).</value>
  </data>
  <data name="plRetrieveInterval.Text" xml:space="preserve">
    <value>Retrieve Interval (minutes)</value>
  </data>
  <data name="plMaxImport.Text" xml:space="preserve">
    <value>Maximun import each time</value>
  </data>
  <data name="plMaxImport.Help" xml:space="preserve">
    <value>Enter the maximun articles which will be imported each time. Default value is 50.</value>
  </data>
  <data name="Tip_DefaultValue.Text" xml:space="preserve">
    <value>Enter default values below, articles which are imported from this feed will take them as their default values. For example, if you check on "Article is draft" option below, then all articles which are imported from this feed will be marked as "Draft" by default. Note, you can change these values for each article in "CrossArticle_Admin sub module - My Articles - My Articles" after import.</value>
  </data>
  <data name="btnImportNow.Text" xml:space="preserve">
    <value>Import Articles Now</value>
  </data>
  <data name="btnAddRSS.Text" xml:space="preserve">
    <value>Add Feed</value>
  </data>
  <data name="divPermission.Text" xml:space="preserve">
    <value>Default Permissions</value>
  </data>
  <data name="lblType.Text" xml:space="preserve">
    <value>Department:</value>
  </data>
  <data name="lbtnAddTag.Text" xml:space="preserve">
    <value>Add Tag</value>
  </data>
  <data name="Tip_SelectCategory.Text" xml:space="preserve">
    <value>Select at least 1 category for current feed. Articles which are imported from this feed will take them as their default categories. Note, you can change categories for each article in "CrossArticle_Admin sub module - My Articles - My Articles" after import.</value>
  </data>
  <data name="Tip_ManagePermission.Text" xml:space="preserve">
    <value>Specify permissions for current feed. Articles which are imported from this feed will take them as their default permissions. Note, &lt;br/&gt;1. Only site administrators or article manager roles can access this tab. Normal author will use the default permissions which are specified in "CrossArticle_Admin sub module - Admin Control Panel - Configurations - Global Settings". &lt;br/&gt;2. You can change permissions for each article in "CrossArticle_Admin sub module - My Articles - My Articles" after import.</value>
  </data>
  <data name="Warning_ExceedQuota.Text" xml:space="preserve">
    <value>You have reached your articles quota. Before import new articles, please contact site administrator to increase your articles quota, or delete existing articles.</value>
  </data>
  <data name="lblFeedUrlRss.Text" xml:space="preserve">
    <value>Feed Url</value>
  </data>
  <data name="lblFeedUrlTwitterSearch.Text" xml:space="preserve">
    <value>Twitter Searchword</value>
  </data>
  <data name="lblFeedUrlTwitterTimeline.Text" xml:space="preserve">
    <value>Twitter Account</value>
  </data>
  <data name="Tip_Tag.Text" xml:space="preserve">
    <value>Enter default tag for current feed below (one tag per line) or click "Add Tag" button to add an existing popular tag. Articles which are imported from this feed will take them as their default tags. Note, you can change tags for each article in "CrossArticle_Admin sub module - My Articles - My Articles" after import.</value>
  </data>
  <data name="plViewRoles.Help" xml:space="preserve">
    <value>View Roles</value>
  </data>
  <data name="plViewRoles.Text" xml:space="preserve">
    <value>View Roles</value>
  </data>
  <data name="Tip_SuccessImport.Text" xml:space="preserve">
    <value>Successfully imported {0} articles from your RSS feeds. You can view them at "CrossArticle_Admin sub module - My Articles - My Articles".</value>
  </data>
</root>